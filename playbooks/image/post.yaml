---
# This playbook is executed before the post of otc-zuul-jobs
# upload-container-image
#
- hosts: localhost
  vars:
    vault_addr: "{{ zuul_vault_addr }}"
    vault_token: "{{ lookup('file', zuul_base_vault_token_path) }}"
    vault_secret_dest: "{{ zuul.executor.work_root }}/.approle-secret"
    vault_token_dest: "{{ zuul.executor.work_root }}/.approle-token"
    vault_role_name: "{{ vault_data.vault_role_name }}"

  roles:
    - role: create-vault-approle-secret

    - role: create-vault-approle-token
      vault_role_id: "{{ vault_data.vault_role_id }}"
      vault_wrapping_token_id: "{{ lookup('file', vault_secret_dest) }}"

- hosts: all
  vars:
    vault_addr: "{{ zuul_vault_addr }}"
    vault_secret_dest: "{{ zuul.executor.work_root }}/.approle-secret"

  tasks:
    - name: Get Registry credentials
      no_log: true
      delegate_to: localhost
      ansible.builtin.uri:
        url: "{{ vault_addr }}/v1/secret/data/image_registries"
        method: "GET"
        headers:
          "X-Vault-Token": "{{ lookup('file', vault_token_dest) }}"
        body_format: json
        return_content: true
      register: registry_credentials

    - name: Upload image
      ansible.builtin.import_role:
        name: upload-container-image1
      vars:
        container_registry_credentials: "{{ registry_credentials.json.data.data }}"

    - name: Get Dependencytrack credentials
      no_log: true
      delegate_to: localhost
      ansible.builtin.uri:
        url: "{{ vault_addr }}/v1/secret/data/dependencytrack/uploader"
        method: "GET"
        headers:
          "X-Vault-Token": "{{ lookup('file', vault_token_dest) }}"
        body_format: json
        return_content: true
      register: dt_credentials
      failed_when: false

    - name: Upload BOMs to dependency track
      ansible.builtin.import_role:
        name: upload-bom-to-dependencytrack
      vars:
        dependencytrack_credentials: "{{ dt_credentials.json.data.data }}"
        bom_artifacts: "{{ zuul_bom_results }}"
      when: "zuul_bom_results is defined"
      when: 
        - "zuul_bom_results is defined"
        - "dt_credentials is defined"
        - "dt_credentials.json is defined"
        - "dt_credentials.json.data is defined"

    - name: Remove vault token file
      file:
        path: "{{ vault_token_dest }}"
        state: "absent"
