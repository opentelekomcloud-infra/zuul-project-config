- hosts: localhost
  vars:
    vault_addr: "{{ zuul_vault_addr }}"
    vault_token: "{{ lookup('file', zuul_base_vault_token_path) }}"
    vault_secret_dest: "{{ ansible_user_dir }}/.approle-secret"
    vault_token_dest: "{{ ansible_user_dir }}/.approle-token"

    vault_role_name: "{{ vault_data.vault_role_name }}"

  roles:
    - role: create-vault-approle-secret
      when: zuul_success | bool

    - role: create-vault-approle-token
      vault_role_id: "{{ vault_data.vault_role_id }}"
      vault_wrapping_token_id: "{{ lookup('file', vault_secret_dest) }}"
      when: zuul_success | bool

  tasks:
    - block:
        - name: Get cloud config from vault
          no_log: true
          vault_cloud_config:
            vault_addr: "{{ vault_addr }}"
            vault_token: "{{ lookup('file', vault_token_dest) }}"
            cloud_secret_path: "{{ promote_data.vault_cloud_secret_path }}"
            mode: "token"
          register: cloud_config

        - name: Upload docs
          include_role:
            name: upload-artifact-swift
          vars:
            artifact_src: "{{ zuul.executor.work_root }}/docs-html.tar.gz"
            upload_artifact_swift_cloud: "{{ cloud_config.config }}"
            upload_artifact_swift_container_name: "{{ container | default(zuul.project.short_name) }}"
            upload_artifact_swift_prefix: "{{ prefix | default(omit) }}"
            upload_artifact_swift_container_public: "{{ make_public | default(omit) }}"

        - name: Destroy vault token
          include_role:
            name: destroy-vault-token
          vars:
            vault_token: "{{ lookup('file', vault_token_dest) }}"

        - name: Remove vault token file
          file:
            path: "{{ vault_token_dest }}"
            state: "absent"
      when: zuul_success | bool
